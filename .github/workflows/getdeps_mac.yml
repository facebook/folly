# This file was @generated by getdeps.py

name: mac

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:
  build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v4
    - name: Show disk space at start
      run: df -h
    - name: Free up disk space
      run: sudo rm -rf /usr/local/lib/android
    - name: Show disk space after freeing up
      run: df -h
    - name: Install system deps
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages install-system-deps --recursive folly
    - id: paths
      name: Query paths
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages query-paths --recursive --src-dir=. folly  >> "$GITHUB_OUTPUT"
    - name: Fetch boost
      if: ${{ steps.paths.outputs.boost_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests boost
    - name: Fetch openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests openssl
    - name: Fetch ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests ninja
    - name: Fetch cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests cmake
    - name: Fetch double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests double-conversion
    - name: Fetch fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests fast_float
    - name: Fetch fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests fmt
    - name: Fetch gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests gflags
    - name: Fetch glog
      if: ${{ steps.paths.outputs.glog_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests glog
    - name: Fetch googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests googletest
    - name: Fetch libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests libdwarf
    - name: Fetch libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests libevent
    - name: Fetch lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests lz4
    - name: Fetch snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests snappy
    - name: Fetch zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests zstd
    - name: Fetch autoconf
      if: ${{ steps.paths.outputs.autoconf_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests autoconf
    - name: Fetch automake
      if: ${{ steps.paths.outputs.automake_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests automake
    - name: Fetch libtool
      if: ${{ steps.paths.outputs.libtool_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests libtool
    - name: Fetch libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests libsodium
    - name: Fetch xz
      if: ${{ steps.paths.outputs.xz_SOURCE }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fetch --no-tests xz
    - name: Restore boost from cache
      id: restore_boost
      if: ${{ steps.paths.outputs.boost_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.boost_INSTALL }}
       key: ${{ steps.paths.outputs.boost_CACHE_KEY }}-install
    - name: Build boost
      if: ${{ steps.paths.outputs.boost_SOURCE && ! steps.restore_boost.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests boost
    - name: Save boost to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.boost_SOURCE && ! steps.restore_boost.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.boost_INSTALL }}
       key: ${{ steps.paths.outputs.boost_CACHE_KEY }}-install
    - name: Restore openssl from cache
      id: restore_openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.openssl_INSTALL }}
       key: ${{ steps.paths.outputs.openssl_CACHE_KEY }}-install
    - name: Build openssl
      if: ${{ steps.paths.outputs.openssl_SOURCE && ! steps.restore_openssl.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests openssl
    - name: Save openssl to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.openssl_SOURCE && ! steps.restore_openssl.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.openssl_INSTALL }}
       key: ${{ steps.paths.outputs.openssl_CACHE_KEY }}-install
    - name: Restore ninja from cache
      id: restore_ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.ninja_INSTALL }}
       key: ${{ steps.paths.outputs.ninja_CACHE_KEY }}-install
    - name: Build ninja
      if: ${{ steps.paths.outputs.ninja_SOURCE && ! steps.restore_ninja.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests ninja
    - name: Save ninja to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.ninja_SOURCE && ! steps.restore_ninja.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.ninja_INSTALL }}
       key: ${{ steps.paths.outputs.ninja_CACHE_KEY }}-install
    - name: Restore cmake from cache
      id: restore_cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.cmake_INSTALL }}
       key: ${{ steps.paths.outputs.cmake_CACHE_KEY }}-install
    - name: Build cmake
      if: ${{ steps.paths.outputs.cmake_SOURCE && ! steps.restore_cmake.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests cmake
    - name: Save cmake to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.cmake_SOURCE && ! steps.restore_cmake.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.cmake_INSTALL }}
       key: ${{ steps.paths.outputs.cmake_CACHE_KEY }}-install
    - name: Restore double-conversion from cache
      id: restore_double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.double-conversion_INSTALL }}
       key: ${{ steps.paths.outputs.double-conversion_CACHE_KEY }}-install
    - name: Build double-conversion
      if: ${{ steps.paths.outputs.double-conversion_SOURCE && ! steps.restore_double-conversion.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests double-conversion
    - name: Save double-conversion to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.double-conversion_SOURCE && ! steps.restore_double-conversion.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.double-conversion_INSTALL }}
       key: ${{ steps.paths.outputs.double-conversion_CACHE_KEY }}-install
    - name: Restore fast_float from cache
      id: restore_fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.fast_float_INSTALL }}
       key: ${{ steps.paths.outputs.fast_float_CACHE_KEY }}-install
    - name: Build fast_float
      if: ${{ steps.paths.outputs.fast_float_SOURCE && ! steps.restore_fast_float.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests fast_float
    - name: Save fast_float to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.fast_float_SOURCE && ! steps.restore_fast_float.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.fast_float_INSTALL }}
       key: ${{ steps.paths.outputs.fast_float_CACHE_KEY }}-install
    - name: Restore fmt from cache
      id: restore_fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.fmt_INSTALL }}
       key: ${{ steps.paths.outputs.fmt_CACHE_KEY }}-install
    - name: Build fmt
      if: ${{ steps.paths.outputs.fmt_SOURCE && ! steps.restore_fmt.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests fmt
    - name: Save fmt to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.fmt_SOURCE && ! steps.restore_fmt.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.fmt_INSTALL }}
       key: ${{ steps.paths.outputs.fmt_CACHE_KEY }}-install
    - name: Restore gflags from cache
      id: restore_gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.gflags_INSTALL }}
       key: ${{ steps.paths.outputs.gflags_CACHE_KEY }}-install
    - name: Build gflags
      if: ${{ steps.paths.outputs.gflags_SOURCE && ! steps.restore_gflags.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests gflags
    - name: Save gflags to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.gflags_SOURCE && ! steps.restore_gflags.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.gflags_INSTALL }}
       key: ${{ steps.paths.outputs.gflags_CACHE_KEY }}-install
    - name: Restore glog from cache
      id: restore_glog
      if: ${{ steps.paths.outputs.glog_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.glog_INSTALL }}
       key: ${{ steps.paths.outputs.glog_CACHE_KEY }}-install
    - name: Build glog
      if: ${{ steps.paths.outputs.glog_SOURCE && ! steps.restore_glog.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests glog
    - name: Save glog to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.glog_SOURCE && ! steps.restore_glog.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.glog_INSTALL }}
       key: ${{ steps.paths.outputs.glog_CACHE_KEY }}-install
    - name: Restore googletest from cache
      id: restore_googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.googletest_INSTALL }}
       key: ${{ steps.paths.outputs.googletest_CACHE_KEY }}-install
    - name: Build googletest
      if: ${{ steps.paths.outputs.googletest_SOURCE && ! steps.restore_googletest.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests googletest
    - name: Save googletest to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.googletest_SOURCE && ! steps.restore_googletest.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.googletest_INSTALL }}
       key: ${{ steps.paths.outputs.googletest_CACHE_KEY }}-install
    - name: Restore libdwarf from cache
      id: restore_libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libdwarf_INSTALL }}
       key: ${{ steps.paths.outputs.libdwarf_CACHE_KEY }}-install
    - name: Build libdwarf
      if: ${{ steps.paths.outputs.libdwarf_SOURCE && ! steps.restore_libdwarf.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests libdwarf
    - name: Save libdwarf to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libdwarf_SOURCE && ! steps.restore_libdwarf.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libdwarf_INSTALL }}
       key: ${{ steps.paths.outputs.libdwarf_CACHE_KEY }}-install
    - name: Restore libevent from cache
      id: restore_libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libevent_INSTALL }}
       key: ${{ steps.paths.outputs.libevent_CACHE_KEY }}-install
    - name: Build libevent
      if: ${{ steps.paths.outputs.libevent_SOURCE && ! steps.restore_libevent.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests libevent
    - name: Save libevent to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libevent_SOURCE && ! steps.restore_libevent.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libevent_INSTALL }}
       key: ${{ steps.paths.outputs.libevent_CACHE_KEY }}-install
    - name: Restore lz4 from cache
      id: restore_lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.lz4_INSTALL }}
       key: ${{ steps.paths.outputs.lz4_CACHE_KEY }}-install
    - name: Build lz4
      if: ${{ steps.paths.outputs.lz4_SOURCE && ! steps.restore_lz4.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests lz4
    - name: Save lz4 to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.lz4_SOURCE && ! steps.restore_lz4.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.lz4_INSTALL }}
       key: ${{ steps.paths.outputs.lz4_CACHE_KEY }}-install
    - name: Restore snappy from cache
      id: restore_snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.snappy_INSTALL }}
       key: ${{ steps.paths.outputs.snappy_CACHE_KEY }}-install
    - name: Build snappy
      if: ${{ steps.paths.outputs.snappy_SOURCE && ! steps.restore_snappy.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests snappy
    - name: Save snappy to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.snappy_SOURCE && ! steps.restore_snappy.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.snappy_INSTALL }}
       key: ${{ steps.paths.outputs.snappy_CACHE_KEY }}-install
    - name: Restore zstd from cache
      id: restore_zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.zstd_INSTALL }}
       key: ${{ steps.paths.outputs.zstd_CACHE_KEY }}-install
    - name: Build zstd
      if: ${{ steps.paths.outputs.zstd_SOURCE && ! steps.restore_zstd.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests zstd
    - name: Save zstd to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.zstd_SOURCE && ! steps.restore_zstd.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.zstd_INSTALL }}
       key: ${{ steps.paths.outputs.zstd_CACHE_KEY }}-install
    - name: Restore autoconf from cache
      id: restore_autoconf
      if: ${{ steps.paths.outputs.autoconf_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.autoconf_INSTALL }}
       key: ${{ steps.paths.outputs.autoconf_CACHE_KEY }}-install
    - name: Build autoconf
      if: ${{ steps.paths.outputs.autoconf_SOURCE && ! steps.restore_autoconf.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests autoconf
    - name: Save autoconf to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.autoconf_SOURCE && ! steps.restore_autoconf.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.autoconf_INSTALL }}
       key: ${{ steps.paths.outputs.autoconf_CACHE_KEY }}-install
    - name: Restore automake from cache
      id: restore_automake
      if: ${{ steps.paths.outputs.automake_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.automake_INSTALL }}
       key: ${{ steps.paths.outputs.automake_CACHE_KEY }}-install
    - name: Build automake
      if: ${{ steps.paths.outputs.automake_SOURCE && ! steps.restore_automake.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests automake
    - name: Save automake to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.automake_SOURCE && ! steps.restore_automake.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.automake_INSTALL }}
       key: ${{ steps.paths.outputs.automake_CACHE_KEY }}-install
    - name: Restore libtool from cache
      id: restore_libtool
      if: ${{ steps.paths.outputs.libtool_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libtool_INSTALL }}
       key: ${{ steps.paths.outputs.libtool_CACHE_KEY }}-install
    - name: Build libtool
      if: ${{ steps.paths.outputs.libtool_SOURCE && ! steps.restore_libtool.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests libtool
    - name: Save libtool to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libtool_SOURCE && ! steps.restore_libtool.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libtool_INSTALL }}
       key: ${{ steps.paths.outputs.libtool_CACHE_KEY }}-install
    - name: Restore libsodium from cache
      id: restore_libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.libsodium_INSTALL }}
       key: ${{ steps.paths.outputs.libsodium_CACHE_KEY }}-install
    - name: Build libsodium
      if: ${{ steps.paths.outputs.libsodium_SOURCE && ! steps.restore_libsodium.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests libsodium
    - name: Save libsodium to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.libsodium_SOURCE && ! steps.restore_libsodium.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.libsodium_INSTALL }}
       key: ${{ steps.paths.outputs.libsodium_CACHE_KEY }}-install
    - name: Restore xz from cache
      id: restore_xz
      if: ${{ steps.paths.outputs.xz_SOURCE }}
      uses: actions/cache/restore@v4
      with:
       path: ${{ steps.paths.outputs.xz_INSTALL }}
       key: ${{ steps.paths.outputs.xz_CACHE_KEY }}-install
    - name: Build xz
      if: ${{ steps.paths.outputs.xz_SOURCE && ! steps.restore_xz.outputs.cache-hit }}
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --free-up-disk --no-tests xz
    - name: Save xz to cache
      uses: actions/cache/save@v4
      if: ${{ steps.paths.outputs.xz_SOURCE && ! steps.restore_xz.outputs.cache-hit }}
      with:
       path: ${{ steps.paths.outputs.xz_INSTALL }}
       key: ${{ steps.paths.outputs.xz_CACHE_KEY }}-install
    - name: Build folly
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages build --src-dir=. folly  --project-install-prefix folly:/usr/local
    - name: Copy artifacts
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages fixup-dyn-deps --src-dir=. folly _artifacts/mac  --project-install-prefix folly:/usr/local --final-install-prefix /usr/local
    - uses: actions/upload-artifact@v4
      with:
        name: folly
        path: _artifacts
    - name: Test folly
      run: python3 build/fbcode_builder/getdeps.py --allow-system-packages test --src-dir=. folly  --project-install-prefix folly:/usr/local
    - name: Show disk space at end
      if: always()
      run: df -h
